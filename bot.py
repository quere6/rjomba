import random
import re
from telegram import Update
from telegram.ext import ApplicationBuilder, MessageHandler, CommandHandler, ContextTypes, filters
from collections import defaultdict
from datetime import datetime, timedelta
from difflib import SequenceMatcher

# –°–ª–æ–≤–Ω–∏–∫ —Ñ—Ä–∞–∑ (—è–∫—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –º–∞—î –Ω–∞–ø–∏—Å–∞—Ç–∏)
PHRASES = {
    "—Ä–∂–æ–º–±–∞": "ü§£",
    "–Ω—É —Ç–∏ —Ç–∞–º –¥–µ—Ä–∂–∏—Å—å": "–°—Å–∏–∫–ª–æ",
    "–∞ –≤–æ–Ω–æ –º–µ–Ω—ñ –Ω–µ –Ω–∞–¥–∞": "–Ω–µ –º—É–∂–∏–∫",
    "–Ω–∞—à –∂–∏–≤—á–∏–∫": "–º—ñ—Å—Ç–µ—Ä –±—ñ—Å—Ç",
    "—Å—ñ–≥–º–∞ –±–æ–π": "–ë–æ–≥–¥–∞–Ω"
}

# –î–ª—è –∞–Ω—Ç–∏—Å–ø–∞–º—É
user_messages = defaultdict(list)
banned_users = {}
user_ban_durations = defaultdict(lambda: 5 * 60)  # –ø–æ—á–∞—Ç–∫–æ–≤–∏–π –±–∞–Ω 5 —Ö–≤ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)

# –î–ª—è –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫—É —Ñ—Ä–∞–∑
message_count = 0

# –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –æ–±–º–µ–∂–µ–Ω—å
SPAM_LIMIT = 150
TIME_WINDOW = 5 * 60
MAX_BAN_TIME = 30 * 60  # –º–∞–∫—Å–∏–º—É–º 30 —Ö–≤

# –§—É–Ω–∫—Ü—ñ—è –Ω–æ—Ä–º–∞–ª—ñ–∑–∞—Ü—ñ—ó —Ç–µ–∫—Å—Ç—É
def normalize(text):
    text = text.lower()
    text = re.sub(r"[^\w\s]", "", text)  # –≤–∏–¥–∞–ª–∏—Ç–∏ –µ–º–æ–¥–∑—ñ —Ç–∞ —Å–∏–º–≤–æ–ª–∏
    return text.strip()

# –ü–æ—à—É–∫ —Å—Ö–æ–∂–æ—ó —Ñ—Ä–∞–∑–∏
def is_similar(input_text):
    for phrase in PHRASES:
        ratio = SequenceMatcher(None, input_text, phrase).ratio()
        if ratio > 0.7:
            return True
    return False

# /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–Ø —Ä–∂–æ–º–±–∞ –±–æ—Ç")

# /words
async def words(update: Update, context: ContextTypes.DEFAULT_TYPE):
    word_list = "\n".join([f"- {w}" for w in PHRASES.keys()])
    await update.message.reply_text(f"–û—Å—å —Ñ—Ä–∞–∑–∏, —è–∫—ñ —Ç–∏ –º–æ–∂–µ—à –Ω–∞–ø–∏—Å–∞—Ç–∏:\n{word_list}")

# –û—Å–Ω–æ–≤–Ω–∞ –ª–æ–≥—ñ–∫–∞
async def reply(update: Update, context: ContextTypes.DEFAULT_TYPE):
    global message_count
    user_id = update.effective_user.id
    now = datetime.now()
    user_message = update.message.text.strip()

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –±–∞–Ω—É
    if user_id in banned_users:
        ban_end = banned_users[user_id]
        if now < ban_end:
            # –ù–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –ø—ñ–¥ —á–∞—Å –±–∞–Ω—É
            return
        else:
            del banned_users[user_id]
            user_ban_durations[user_id] = 5 * 60  # —Å–∫–∏–¥–∞—î–º–æ –±–∞–Ω –¥–æ –ø–æ—á–∞—Ç–∫–æ–≤–æ–≥–æ

    # –°–ø–∞–º –∫–æ–Ω—Ç—Ä–æ–ª—å
    user_messages[user_id].append(now)
    user_messages[user_id] = [t for t in user_messages[user_id] if (now - t).total_seconds() <= TIME_WINDOW]
    if len(user_messages[user_id]) > SPAM_LIMIT:
        # –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∂–µ –±—É–≤ –∑–∞–±–∞–Ω–µ–Ω–∏–π —Ä–∞–Ω—ñ—à–µ, –¥–æ–¥–∞—î–º–æ —á–∞—Å –±–∞–Ω—É +5 —Ö–≤, –º–∞–∫—Å–∏–º—É–º 30 —Ö–≤
        current_ban = user_ban_durations[user_id]
        new_ban = min(current_ban + 5 * 60, MAX_BAN_TIME)
        user_ban_durations[user_id] = new_ban
        banned_users[user_id] = now + timedelta(seconds=new_ban)
        # –ü–æ–≤—ñ–¥–æ–º–ª—è—Ç–∏ –Ω–µ –±—É–¥–µ–º–æ, –±–æ –±–æ—Ç –Ω–µ –º–∞—î –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏ –ø—ñ–¥ —á–∞—Å –±–∞–Ω—É
        return

    # –û–±—Ä–æ–±–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    norm_msg = normalize(user_message)
    if norm_msg in PHRASES:
        await update.message.reply_text(PHRASES[norm_msg])
        message_count += 1
    elif is_similar(norm_msg):
        await update.message.reply_text("–¢–∏ –º–∞–∑–∏–ª–∞")
    else:
        await update.message.reply_text("–†–∂–æ–º–±–∞")
        return  # –Ω–µ —Ä–∞—Ö—É—î–º–æ –≤ message_count

    if message_count >= 5:
        await update.message.reply_text("–†–∂–æ–º–±–∞")
        message_count = 0

# –ó–∞–ø—É—Å–∫
app = ApplicationBuilder().token("7957837080:AAH1O_tEfW9xC9jfUt2hRXILG-Z579_w7ig").build()
app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("words", words))
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, reply))
app.run_polling()
